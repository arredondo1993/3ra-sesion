 comandos git
## recuerden agregar todo

git --version 
cd ~/Desktop
mkdir git-carpeta // crea directorio
cd git-carpeta
pwd // directorio actual

git init // "trackear" o rastrear directorio actual en git
git status // estado

echo "curso git" > file.txt  // crea cadena de caracteres y guarda en archivo
ls // muestra archivos en directorio local


Crear una nueva rama (rama_2) y cambiarse a ella:
$ git checkout –b rama_2
Volver a la rama principal:
$ git checkout master
Borrar rama:
$ git branch –d rama_2
PUSH para disponibilizar tu nueva rama:
$ git push origin <branch>                    // <branch> se debe reemplazar por el 						 nombre de la nueva rama


git add file.txt // añade archivo a repo git
git commit -m "Este es el primer commit"  // un commit "guarda" en el repo de git los cambios al archivo
git status

### luego de hacer y guardar cambios en el archivo

git status
On branch master
Changed not staged for commit:
(use "git add <file..." to update what will be committed)
{use "git checkout -- <file>..." to discard changed in working directory)
modified: file.txt
no changed added to commit (use "git add" and/or "git commit -a")
$

### comentar nueva version
git add file.txt
git commit -m "este es el segundo commit"
git status

clear

git log   // ver el "historial" de cambios en el repo git
git show 8d28a21f71ec5657a2f5421e03faad307d9eec6f // muestra detalle de commit

## 

